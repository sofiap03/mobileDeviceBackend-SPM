// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String    @unique
  password     String
  active_state Boolean   @default(false)
  role         String
  avatar       String
  breweries    Brewery[]
  Review       Review[]
  Rating       Rating[]
  Event        Event[]
  createdAt    DateTime  @default(now())
  updateAt     DateTime  @updatedAt
}

model Brewery {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  location    String
  description String
  beers       String
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt
  User        User?    @relation(fields: [userId], references: [id])
  userId      String?  @db.ObjectId
  Review      Review[]
  Rating      Rating[]
  Event       Event[]
  Beer        Beer[]
}

model Beer {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  style       String
  abv         Float
  description String
  breweryId   String
  Brewery     Brewery? @relation(fields: [breweryId], references: [id])
  createdAt   DateTime @default(now())
  updateAt    DateTime @updatedAt
  Review      Review[]
  Rating      Rating[]
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  breweryId String
  beerId    String
  rating    Int
  comment   String
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  Brewery   Brewery  @relation(fields: [breweryId], references: [id])
  Beer      Beer     @relation(fields: [beerId], references: [id])
}

model Rating {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String
  breweryId String
  beerId    String
  rating    Int
  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt
  User      User     @relation(fields: [userId], references: [id])
  Brewery   Brewery  @relation(fields: [breweryId], references: [id])
  Beer      Beer     @relation(fields: [beerId], references: [id])
}

model Event {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  startDate   DateTime
  endDate     DateTime?
  location    String
  userId      String
  breweryId   String
  beerId      String
  createdAt   DateTime  @default(now())
  updateAt    DateTime  @updatedAt
  User        User      @relation(fields: [userId], references: [id])
  Brewery     Brewery   @relation(fields: [breweryId], references: [id])
}
